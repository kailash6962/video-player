// Netflix-Style Video Player Database Schema
// Use this file with dbdiagram.io to generate visual database diagrams
// Visit: https://dbdiagram.io/d and paste this content

Project video_player {
  database_type: 'SQLite'
  Note: '''
    # Netflix-Style Video Player Database Schema
    
    This database schema supports a multi-user video streaming platform with:
    - User management with PIN authentication
    - Video progress tracking per user
    - Theme preferences (per user and device)
    - Administrative controls
    - Watch history and continue watching features
    
    **Key Features:**
    - Multi-user support with individual progress tracking
    - Optional PIN authentication (users can skip PIN during registration)
    - Theme system with light/dark/system preferences
    - Video metadata with multi-format support
    - Administrative user management
    - Session-based authentication with cookies
  '''
}

// Users table - Core user management
Table users {
  id integer [primary key, increment, note: 'Auto-incrementing user ID']
  username text [unique, not null, note: 'Unique username for login']
  pin_hash text [null, note: 'Hashed PIN - nullable for users who skip PIN']
  display_name text [not null, note: 'User display name shown in UI']
  avatar_emoji text [default: 'ðŸ‘¤', note: 'Generated initials or emoji for avatar']
  avatar_bg_color text [default: '#4F46E5', note: 'Generated background color for avatar']
  avatar_text_color text [default: '#FFFFFF', note: 'Text color for avatar (usually white)']
  theme_preference text [default: 'system', note: 'User theme: light, dark, or system']
  created_at datetime [default: `CURRENT_TIMESTAMP`, note: 'User registration timestamp']
  last_login datetime [null, note: 'Last login timestamp']
  is_active boolean [default: 1, note: 'User account status (1=active, 0=suspended)']
  
  note: 'Core users table with multi-user support and theme preferences'
}

// Video metadata table - Tracks video progress per user
Table video_metadata {
  user_id text [not null, default: 'guest', note: 'User ID or guest for anonymous users']
  video_id text [not null, note: 'Video file identifier (filename)']
  current_time real [default: 0, note: 'Current playback position in seconds']
  last_opened text [null, note: 'ISO timestamp of last video access']
  size integer [null, note: 'Video file size in bytes']
  length text [null, note: 'Video duration in seconds']
  active integer [default: 0, note: 'Currently active video flag (1=active, 0=inactive)']
  created_at datetime [default: `CURRENT_TIMESTAMP`, note: 'First watch timestamp']
  updated_at datetime [default: `CURRENT_TIMESTAMP`, note: 'Last update timestamp']
  
  indexes {
    (user_id, video_id) [pk, note: 'Composite primary key for user-video combination']
    user_id [name: 'idx_video_metadata_user_id']
    video_id [name: 'idx_video_metadata_video_id']
    last_opened [name: 'idx_video_metadata_last_opened']
  }
  
  note: 'Video progress tracking per user with composite primary key'
}

// Settings table - System-wide configuration
Table settings {
  key text [primary key, note: 'Setting identifier']
  value text [not null, note: 'Setting value (JSON or string)']
  description text [null, note: 'Human-readable setting description']
  created_at datetime [default: `CURRENT_TIMESTAMP`, note: 'Setting creation timestamp']
  updated_at datetime [default: `CURRENT_TIMESTAMP`, note: 'Last update timestamp']
  
  note: 'System-wide settings and configuration'
}

// Device theme preferences - For login page and guest users
Table device_theme_preferences {
  device_id text [primary key, note: 'Unique device identifier generated by client']
  theme text [not null, default: 'system', note: 'Device theme preference: light, dark, or system']
  created_at datetime [default: `CURRENT_TIMESTAMP`, note: 'First preference set timestamp']
  updated_at datetime [default: `CURRENT_TIMESTAMP`, note: 'Last update timestamp']
  
  note: 'Theme preferences for devices (used on login page and for guests)'
}

// User sessions - Track active user sessions (optional future enhancement)
Table user_sessions {
  session_id text [primary key, note: 'Unique session identifier']
  user_id integer [not null, ref: > users.id, note: 'Reference to users table']
  device_info text [null, note: 'Device/browser information']
  ip_address text [null, note: 'Client IP address']
  created_at datetime [default: `CURRENT_TIMESTAMP`, note: 'Session start timestamp']
  last_activity datetime [default: `CURRENT_TIMESTAMP`, note: 'Last activity timestamp']
  expires_at datetime [null, note: 'Session expiration timestamp']
  is_active boolean [default: 1, note: 'Session status']
  
  indexes {
    user_id [name: 'idx_user_sessions_user_id']
    last_activity [name: 'idx_user_sessions_last_activity']
  }
  
  note: 'User session tracking (future enhancement for security and analytics)'
}

// Watch history - Detailed viewing history (optional future enhancement)
Table watch_history {
  id integer [primary key, increment, note: 'Auto-incrementing history ID']
  user_id integer [not null, ref: > users.id, note: 'Reference to users table']
  video_id text [not null, note: 'Video file identifier']
  series_name text [null, note: 'Series/folder name if applicable']
  watch_duration integer [default: 0, note: 'Total watch time in seconds']
  completion_percentage real [default: 0, note: 'Percentage of video completed (0-100)']
  quality text [null, note: 'Video quality watched (480p, 720p, 1080p, 4K)']
  device_type text [null, note: 'Device type used for watching']
  started_at datetime [default: `CURRENT_TIMESTAMP`, note: 'Watch session start']
  ended_at datetime [null, note: 'Watch session end']
  
  indexes {
    user_id [name: 'idx_watch_history_user_id']
    video_id [name: 'idx_watch_history_video_id']
    started_at [name: 'idx_watch_history_started_at']
  }
  
  note: 'Detailed watch history for analytics and recommendations (future enhancement)'
}

// Video library metadata - Cached video file information (optional future enhancement)
Table video_library {
  id integer [primary key, increment, note: 'Auto-incrementing library ID']
  video_id text [unique, not null, note: 'Video file identifier (filename)']
  series_name text [null, note: 'Series/folder name']
  title text [not null, note: 'Clean video title (sanitized)']
  original_filename text [not null, note: 'Original file name']
  file_path text [not null, note: 'Full file path on server']
  file_size integer [null, note: 'File size in bytes']
  duration integer [null, note: 'Video duration in seconds']
  resolution text [null, note: 'Video resolution (e.g., 1920x1080)']
  video_codec text [null, note: 'Video codec (H.264, HEVC, VP9, etc.)']
  audio_codec text [null, note: 'Audio codec (AAC, MP3, AC-3, etc.)']
  subtitle_tracks integer [default: 0, note: 'Number of subtitle tracks']
  audio_tracks integer [default: 1, note: 'Number of audio tracks']
  thumbnail_generated boolean [default: 0, note: 'Thumbnail generation status']
  added_at datetime [default: `CURRENT_TIMESTAMP`, note: 'When video was added to library']
  modified_at datetime [null, note: 'File modification timestamp']
  
  indexes {
    video_id [name: 'idx_video_library_video_id']
    series_name [name: 'idx_video_library_series_name']
    title [name: 'idx_video_library_title']
  }
  
  note: 'Video library metadata cache (future enhancement for better performance)'
}

// Define relationships
Ref: video_metadata.user_id > users.username [note: 'Video progress belongs to a user (or guest)']
Ref: user_sessions.user_id > users.id [note: 'Sessions belong to users']
Ref: watch_history.user_id > users.id [note: 'Watch history belongs to users']

// Enum definitions for better documentation
Enum theme_options {
  light [note: 'Light theme with white background']
  dark [note: 'Dark theme with dark background (Netflix-style)']
  system [note: 'Follow system/OS theme preference']
}

Enum video_quality {
  "480p" [note: 'Standard definition']
  "720p" [note: 'HD quality']
  "1080p" [note: 'Full HD quality']
  "4K" [note: 'Ultra HD quality']
}

Enum device_types {
  desktop [note: 'Desktop/laptop browser']
  mobile [note: 'Mobile device browser']
  tablet [note: 'Tablet browser']
  smart_tv [note: 'Smart TV browser']
}

// Sample data for documentation
TableGroup "Core Tables" {
  users
  video_metadata
  settings
}

TableGroup "Theme System" {
  device_theme_preferences
}

TableGroup "Future Enhancements" {
  user_sessions
  watch_history
  video_library
}

// Database notes and constraints
Note database_constraints {
  '''
  ## Key Database Constraints and Features:
  
  ### Multi-User System:
  - Each user has a unique username and optional PIN
  - Video progress is tracked per user with composite key (user_id, video_id)
  - Guest users are supported with user_id = 'guest'
  
  ### Authentication:
  - PIN is optional - users can skip during registration
  - PIN is hashed using SHA-256 with salt
  - Session management via HTTP cookies
  
  ### Theme System:
  - User-specific theme preferences stored in users table
  - Device-specific themes for login page and guests
  - Three theme options: light, dark, system
  
  ### Video Progress:
  - Composite primary key prevents duplicate entries
  - Supports continue watching functionality
  - Tracks current position, file size, and last access time
  
  ### Performance Optimizations:
  - Indexes on frequently queried columns
  - Composite primary key for efficient user-video lookups
  - SQLite for lightweight deployment
  
  ### Future Enhancements:
  - Session tracking for security
  - Detailed watch history for analytics
  - Video library metadata caching
  - Recommendation system support
  '''
}

// Technical implementation notes
Note implementation_details {
  '''
  ## Implementation Details:
  
  ### Database Technology:
  - **Primary**: SQLite 3.36.0+
  - **Location**: ./databases/home.db (main database)
  - **Additional**: Per-series databases for video metadata
  
  ### Key Features:
  - **Multi-database architecture**: Separate DBs per video series/folder
  - **Automatic schema migration**: Tables created/updated on startup
  - **User color generation**: Automatic avatar colors based on username
  - **Theme persistence**: Both user and device level
  
  ### Security:
  - PIN hashing with salt: 'vidstream_tv_salt'
  - Admin PIN separate from user PINs
  - Session-based authentication
  - Input sanitization and validation
  
  ### Performance:
  - Composite indexes for multi-user queries
  - Efficient video progress lookups
  - Cached thumbnail generation
  - Optimized continue watching queries
  '''
}
